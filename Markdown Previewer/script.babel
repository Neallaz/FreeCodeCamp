import * as React from "https://cdn.skypack.dev/react@17.0.1";
import * as ReactDOM from "https://cdn.skypack.dev/react-dom@17.0.1";
import * as marked from "https://cdn.skypack.dev/marked@4.0.9";

const vari=`
# Welcome to my React Markdown Previewer!<br>
## This is a sub-heading...<br>
### And here's some other cool stuff:<br>

Heres some code, \`<div></div>\` , between 2 backticks.

\`\`\`
// this is multi-line code:

function anotherExample(firstLine, lastLine) {
  if (firstLine&& lastLine) {
    return multiLineCode
  }
}
\`\`\`

You can also make text **bold**... whoa!
Or _italic_.
Or... wait for it... **_both!_**
And feel free to go crazy ~~crossing stuff out~~.

There's also [links](https://www.freecodecamp.org), and
> Block Quotes!

And if you want to get really crazy, even tables:

Wild Header | Crazy Header | Another Header?
------------ | ------------- | -------------
Your content can | be here, and it | can be here....
And here. | Okay. | I think we get it.

- And of course there are lists.
  - Some are bulleted.
     - With different indentation levels.
        - That look like this.


1. And there are numbered lists too.
1. Use just 1s if you want!
1. And last but not least, let's not forget embedded images:

![freeCodeCamp Logo](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg)
`

marked.setOptions({
  breaks:true,
  highlight:function (code) {
    return Prism.highlight(code, Prism.languages.javascript,'javascript')
  }
});


const renderer = new marked.Renderer();
renderer.link= function(href,title,text){
  return `<a target="_blank" href="${href}">${text}</a>`;
};


const Editor =({content, textAreaChange })=> <textarea value={content} onChange={textAreaChange} id="editor" />


const Previewer =({content})=>(
  <div id="preview" dangerouslySetInnerHTML={{
    __html:marked.parse(content, { renderer: renderer })
  }}
    />
  );

const App = () => {
  const [content, setContent] = React.useState(vari)
  const textAreaChange=(event)=>{
    setContent(event.target.value)
  }
      

return(
<div class="main">
  <h1 id="title1">Editor</h1>
  <h1 id="title2">Previewer</h1>
  <Editor content={content} textAreaChange={textAreaChange} />
  
  <Previewer content={content} />
</div>
      )
}
ReactDOM.render(<App />,document.querySelector('#app'));